---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Stasik.
--- DateTime: 25.02.2020 19:04
---
do


    ---@param source unit
    function GetUnitData(source)
        return UnitsList[GetHandleId(source)]
    end


    ---@param source unit
    function NewUnitByTemplate(source, reference_data)

        local data = {
            owner  = source,
            action_timer = CreateTimer(),
            attack_timer = CreateTimer(),
            weapon = MergeTables({}, reference_data),
            basic_movement_speed = GetUnitDefaultMoveSpeed(source),
            turnrate = reference_data.turn_rate / (1. / 0.025)
        }

        data.current_movement_speed = data.basic_movement_speed

        MergeTables(data, reference_data)
        UnitsList[GetHandleId(source)] = data
        return data
    end


    function NewUnitTemplate(id, reference)
        local new_data = { }

            MergeTables(new_data, reference)

            new_data.time_before_remove = reference.time_before_remove or 1.

            UnitsData[FourCC(id)] = new_data
    end


    function UnitDataInit()

        UnitsData       = { }
        UnitsList       = { }

        DefineWeaponsData()
        --=============================================--
        NewUnitTemplate('e00I', {
            weapon = GetWeaponData("inft"),
            move_angle = 25.,
            turn_rate = 75.,
        })
        --=============================================--
        NewUnitTemplate('e00K', {
            weapon = GetWeaponData("trpr"),
            move_angle = 25.,
            turn_rate = 75.,
        })
        --=============================================--
        NewUnitTemplate('e000', {
            weapon = GetWeaponData("trke"),
            move_angle = 30.,
            turn_rate = 85.5,
        })
        NewUnitTemplate('e00C', {
            weapon = GetWeaponData("trke"),
            move_angle = 35.,
            turn_rate = 110.,
        })
        --=============================================--
        NewUnitTemplate('e004', {
            weapon = GetWeaponData("quad"),
            move_angle = 20.,
            turn_rate = 70.,
        })
        --=============================================--
        NewUnitTemplate('e005', {
            weapon = GetWeaponData("tank"),
            move_angle = 20.,
            turn_rate = 60.,
        })
        NewUnitTemplate('e00E', {
            weapon = GetWeaponData("tank"),
            move_angle = 20.,
            turn_rate = 60.,
        })
        NewUnitTemplate('e00D', {
            weapon = GetWeaponData("tank"),
            move_angle = 20.,
            turn_rate = 60.,
        })
        --=============================================--
        NewUnitTemplate('e003', {
            weapon = GetWeaponData("lnch"),
            move_angle = 20.,
            turn_rate = 65.,
        })
        --=============================================--
        NewUnitTemplate('e008', {
            weapon = GetWeaponData("sieg"),
            move_angle = 20.,
            turn_rate = 60.,
        })
        --=============================================--
        NewUnitTemplate('e001', {
            move_angle = 20.,
            turn_rate = 60.,
        })
        --=============================================--
        NewUnitTemplate('e00G', {
            weapon = GetWeaponData("tank"),
            move_angle = 10.,
            turn_rate = 50.,
        })
        --=============================================--

        local group = CreateGroup()
        GroupEnumUnitsInRect(group, bj_mapInitialPlayableArea, nil)
        ForGroup(group, function ()
            local handle = GetUnitTypeId(GetEnumUnit())

            if UnitsData[handle] ~= nil then
                NewUnitByTemplate(GetEnumUnit(), UnitsData[handle])

                if GetUnitTypeId(GetEnumUnit()) == FourCC("e001") then
                    CreateSpiceTexttag(GetEnumUnit())
                end
                --OnUnitCreated(GetEnumUnit())
            end

        end)

        DestroyGroup(group)

        local trg = CreateTrigger()
        TriggerRegisterEnterRectSimple(trg, bj_mapInitialPlayableArea)
        TriggerAddAction(trg, function ()

            local unit = GetTriggerUnit()

                if UnitsList[GetHandleId(unit)] == nil and UnitsData[GetUnitTypeId(unit)] ~= nil then
                    NewUnitByTemplate(unit, UnitsData[GetUnitTypeId(unit)])

                    if GetUnitTypeId(unit) == FourCC("e001") then
                        CreateSpiceTexttag(unit)
                    end
                    --OnUnitCreated(unit)
                end

        end)


        trg = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(trg, EVENT_PLAYER_UNIT_DEATH)
        TriggerAddAction(trg, function ()
            local unit_data = GetUnitData(GetTriggerUnit())

            if unit_data ~= nil then
                PauseTimer(unit_data.action_timer)
                PauseTimer(unit_data.attack_timer)

                if unit_data.time_before_remove > 0. then
                    local handle = GetHandleId(unit_data.Owner)

                    TimerStart(CreateTimer(), unit_data.time_before_remove, false, function ()
                        DestroyTimer(unit_data.action_timer)
                        DestroyTimer(unit_data.attack_timer)

                        if unit_data.spice_text_timer then
                            DestroyTimer(unit_data.spice_text_timer)
                            DestroyTextTag(unit_data.spice_text)
                        end

                        UnitsList[handle] = nil
                        DestroyTimer(GetExpiredTimer())
                    end)

                end

            end

        end)


    end

end

